@value colorLightGrey, colorPlaceholder, colorFocus, colorWhite, colorAuthButton from "../../common/colors.css";
@value smallMargin, mediumMargin, microMargin, smallFontSize, mediumFontSize from "../../common/size.css";

.join {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.inputWrap {
  width: 60%;
  position: relative;
  margin: smallMargin 0;
}

.icon {
  position: absolute;
  top: calc(smallMargin * 1.2);
  left: calc(smallMargin * -2.5);
  font-size: mediumFontSize;
  transition: all 200ms ease;
}

.inputWrap > input {
  background: transparent;
  border: none;
  border-bottom: 1px solid colorLightGrey;
  padding: calc(smallMargin * 1.2) 0 calc(smallMargin * 0.3) 0;
  font-size: smallFontSize;
  width: 100%;
}

.input::placeholder {
  color: transparent;
}

.input:placeholder-shown + .label {
  color: colorPlaceholder;
  font-size: calc(smallFontSize * 1.1);
  top: calc(smallMargin * 1.2);
  transition: all 200ms ease;
}

.input:focus {
  border-bottom: solid 2px colorFocus;
  outline: none;
}

.input:focus + .label {
  color: colorFocus;
}

.input:focus + .label,
.label {
  font-size: calc(smallFontSize * 0.8);
  pointer-events: none;
  position: absolute;
  top: 0;
  left: 0;
}

.input:focus ~ .icon {
  color: colorFocus;
}

.checkTrue {
  display: block;
  position: absolute;
  margin-top: microMargin;
  color: colorFocus;
  font-size: calc(smallFontSize / 2);
}

.checkFalse {
  display: none;
}

.button {
  width: 60%;
  border: 0;
  outline: 0;
  cursor: pointer;
  margin-top: mediumMargin;
  padding: microMargin;
  border-radius: microMargin;
  background-color: colorAuthButton;
  color: colorWhite;
}

.button:hover {
  opacity: 0.8;
}

.disabled {
  opacity: 0.5;
  pointer-events: none;
}
